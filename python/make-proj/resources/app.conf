#set ($d = "$")
[cli]
apps = list: ${d}{cli_config_default:apps}, app, papp
cleanups = list: ${d}{cli_config_default:cleanups}, app, papp, app_decorator
default_action = doit
# usage_config = object({'param':
#     {'max_first_col': 0.4, 'max_metavar_len': 0.2}}):
#     zensols.cli.UsageConfig

#[log_cli]
#format = %%(asctime)s[%%(levelname)s]:%%(name)s %%(message)s
#default_level = debug
#default_app_level = warn

# for multi-process apps, uncomment and remove the log_cli cleanup
#[multiprocess_log_config]
#section = log_cli

[import]
sections = list: imp_env
config_files = list:
  resource(zensols.util): resources/cli.conf,
  resource(zensols.util): resources/cli-config.conf

# configuration files are optional
[config_cli]
expect = False

[config_import]
references = list: app, package, env

[config_imp]
type = import
config_files = list: 
  ^{override}, ^{config_path},
  #resource(${namespace}): resources/obj.yml,
  ^{config_path}, ^{override}

[imp_env]
type = environment
section_name = env
includes = set: GITUSER

[app]
class_name = ${namespace}.${appclass}

[app_decorator]
option_overrides = dict: {'out_dir': {'metavar': 'DIR'}}
option_excludes = set: an_inst

[papp]
class_name = ${namespace}.PrototypeApplication
app = instance: app
