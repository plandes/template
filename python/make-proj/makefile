#[[## makefile automates the build and deployment for python projects]]#


#[[## build config]]#

# type of project
PROJ_TYPE =		python
# make modules to add functionality to a build
#PROJ_MODULES =		python-all
#PROJ_MODULES =		git python-doc
#PROJ_MODULES =		docker release model
PROJ_MODULES =		git python-resources python-cli python-doc python-doc-deploy
INFO_TARGETS +=		appinfo
# additional resources generated by the build that should be cleaned up
#ADD_CLEAN +=


#[[## project specific]]#

# add app configuration to command line arguments
PY_CLI_ARGS +=		-c test-resources/${project}.conf

# edit these if you want
#GITUSER =		johndoe
#PYPI_USER =		johndoe
#PYPI_SIGN =		johndoe@example.com


# make build dependencies (remove after initial build)
_ :=	$(shell [ ! -d .git -a ! -d zenbuild ] && \
	  git init . && \
          git submodule add git@github.com:plandes/zenbuild.git && \
	  git add -A :/ && \
	  git commit -am 'initial add' && \
	  git tag -am initial v0.0.1 && \
          echo "initialized repo" )


## targets

include ./zenbuild/main.mk

.PHONY:			appinfo
appinfo:
			@echo "app-resources-dir: $(RESOURCES_DIR)"


.PHONY:			testrun
testrun:
			$(eval PY_CLI_ARGS=doit $(PY_CLI_ARGS) --outdir ${MTARG}/fake-path)
			@make PY_CLI_DEBUG=1 PY_CLI_ARGS="$(PY_CLI_ARGS)" pycli
